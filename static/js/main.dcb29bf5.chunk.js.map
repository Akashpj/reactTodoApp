{"version":3,"sources":["logo.svg","Message.js","Clock.js","Welcome.js","Components/CreateTask.js","ToggleButton.js","Components/TaskItem.js","Components/TaskList.js","Components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["React","Component","Welcome","CreateTask","props","handleChange","event","setState","task","target","value","handleSubmit","preventDefault","createTask","state","onSubmit","this","type","placeholder","onChange","autoFocus","className","TaskItem","setEditingState","isEditing","toggleTask","id","deleteTask","editTask","taskItem","onClick","readonly","checked","isCompleted","TaskList","tasks","map","index","localStorage","getItem","JSON","parse","Main","trim","push","setItem","stringify","alert","taskId","splice","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAe,I,wCCEOA,IAAMC,UCARD,IAAMC,UCOXC,I,OCPMC,GCAMH,IAAMC,U,kDDC/B,WAAYG,GAAQ,IAAD,8BACjB,cAAMA,IAKRC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEC,KAAMF,EAAMG,OAAOC,SAPlB,EASnBC,aAAe,SAACL,GACdA,EAAMM,iBACN,EAAKR,MAAMS,WAAW,EAAKC,MAAMN,MACjC,EAAKD,SAAS,CAAEC,KAAM,MAVtB,EAAKM,MAAQ,CACXN,KAAM,IAHS,E,0CAcnB,WACE,OACE,uBAAMO,SAAUC,KAAKL,aAArB,UACE,uBACEM,KAAK,OACLC,YAAY,aACZR,MAAOM,KAAKF,MAAMN,KAClBW,SAAUH,KAAKX,aACfe,WAAS,IAEX,wBAAQH,KAAK,SAASI,UAAU,MAAhC,wB,GAzBgCrB,IAAMC,YEAzBqB,E,kDACnB,WAAYlB,GAAQ,IAAD,8BACjB,cAAMA,IAMRmB,gBAAkB,SAACC,GACjB,EAAKjB,SAAS,CAAEiB,UAAWA,KARV,EAUnBC,WAAa,WACX,EAAKrB,MAAMqB,WAAW,EAAKrB,MAAMsB,KAXhB,EAanBC,WAAa,WACX,EAAKvB,MAAMuB,WAAW,EAAKvB,MAAMsB,KAdhB,EAgBnBrB,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEC,KAAMF,EAAMG,OAAOC,SAjBlB,EAmBnBC,aAAe,SAACL,GACdA,EAAMM,iBACN,EAAKR,MAAMwB,SAAS,EAAKxB,MAAMsB,GAAI,EAAKZ,MAAMN,MAC9C,EAAKD,SAAS,CAAEiB,WAAW,KApB3B,EAAKV,MAAQ,CACXN,KAAM,EAAKJ,MAAMyB,SAASrB,KAC1BgB,WAAW,GAJI,E,0CAwBnB,WAAU,IAAD,OACP,OACE,6BACGR,KAAKF,MAAMU,UACV,qCACE,6BACE,sBAAMT,SAAUC,KAAKL,aAArB,SACE,uBACED,MAAOM,KAAKF,MAAMN,KAClBW,SAAUH,KAAKX,aACfe,WAAS,QAIf,+BACE,wBACEC,UAAU,OACVS,QAASd,KAAKL,aACdM,KAAK,SAHP,kBAOA,wBACEI,UAAU,OACVS,QAAS,kBAAM,EAAKP,iBAAgB,IACpCN,KAAK,SAHP,wBAUJ,qCACE,qBAAII,UAAU,OAAOS,QAASd,KAAKS,WAAnC,UACE,uBACER,KAAK,WACLc,UAAQ,EACRC,QAAShB,KAAKZ,MAAMyB,SAASI,cAE/B,sBACEZ,UACEL,KAAKZ,MAAMyB,SAASI,YAChB,YACA,gBAJR,SAOGjB,KAAKZ,MAAMyB,SAASrB,UAGzB,+BACE,wBACEa,UAAU,OACVS,QAAS,kBAAM,EAAKP,iBAAgB,IAFtC,kBAMA,wBAAQF,UAAU,SAASS,QAASd,KAAKW,WAAzC,gC,GAjFwB1B,aCCjBiC,E,4JACnB,WAAU,IAAD,OACP,OACE,kCACE,gCACE,+BACE,sCACA,6CAGJ,gCACGlB,KAAKZ,MAAM+B,MAAMC,KAAI,SAAC5B,EAAM6B,GAAP,OACpB,cAAC,EAAD,CAEER,SAAUrB,EACVkB,GAAIW,EACJV,WAAY,EAAKvB,MAAMuB,WACvBC,SAAU,EAAKxB,MAAMwB,SACrBH,WAAY,EAAKrB,MAAMqB,YALlBY,e,GAbmBrC,IAAMC,WCCtCkC,EAAQG,aAAaC,QAAQ,SAC/BC,KAAKC,MAAMH,aAAaC,QAAQ,UAChC,GACiBG,E,kDACnB,WAAYtC,GAAQ,IAAD,8BACjB,cAAMA,IAKRS,WAAa,SAACL,GACQ,KAAhBA,EAAKmC,QAITR,EAAMS,KAAK,CAAEpC,OAAMyB,aAAa,IAChC,EAAK1B,SAAS,CAAE4B,MAAOA,IACvBG,aAAaO,QAAQ,QAASL,KAAKM,UAAUX,KAL3CY,MAAM,wBARS,EAenBtB,WAAa,SAACuB,GACZ,IAAMnB,EAAWM,EAAMa,GACvBnB,EAASI,aAAeJ,EAASI,YACjC,EAAK1B,SAAS,CAAE4B,MAAOA,IACvBG,aAAaO,QAAQ,QAASL,KAAKM,UAAUX,KAnB5B,EAqBnBR,WAAa,SAACqB,GACZb,EAAMc,OAAOD,EAAQ,GACrB,EAAKzC,SAAS,CAAE4B,MAAOA,IACvBG,aAAaO,QAAQ,QAASL,KAAKM,UAAUX,KAxB5B,EA0BnBP,SAAW,SAACoB,EAAQxC,GACD2B,EAAMa,GACdxC,KAAOA,EAChB,EAAKD,SAAS,CAAE4B,MAAOA,IACvBG,aAAaO,QAAQ,QAASL,KAAKM,UAAUX,KA5B7C,EAAKrB,MAAQ,CACXqB,MAAOA,GAHQ,E,0CAgCnB,WACE,OACE,sBAAKd,UAAU,OAAf,UACE,uCACA,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CAAYR,WAAYG,KAAKH,aAC7B,uBACA,cAAC,EAAD,CACEsB,MAAOnB,KAAKF,MAAMqB,MAClBR,WAAYX,KAAKW,WACjBC,SAAUZ,KAAKY,SACfH,WAAYT,KAAKS,uB,GA5CKzB,IAAMC,WCazBiD,MAZf,WACE,OACE,8BAKE,cAAC,EAAD,OCHSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dcb29bf5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nclass Message extends React.Component {\r\n  render() {\r\n    return <h1>Message: {this.props.message}</h1>;\r\n  }\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\n\r\nclass Clock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { date: new Date() };\r\n  }\r\n  componentDidMount() {\r\n    this.timerId = setInterval(() => {\r\n      this.setState({ date: new Date() });\r\n    }, 1000);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerId);\r\n  }\r\n  render() {\r\n    return <h1>{this.state.date.toLocaleString()}</h1>;\r\n  }\r\n}\r\n\r\nexport default Clock;\r\n","import Message from './Message';\r\nfunction Welcome(props) {\r\n  return (\r\n    <div>\r\n      <h1>Hello {props.name}</h1>\r\n      <Message message=\"how RE YOU\" />\r\n    </div>\r\n  );\r\n}\r\nexport default Welcome;\r\n","import React from 'react';\r\n\r\nexport default class CreateTask extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      task: '',\r\n    };\r\n  }\r\n  handleChange = (event) => {\r\n    this.setState({ task: event.target.value });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.createTask(this.state.task);\r\n    this.setState({ task: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Text\"\r\n          value={this.state.task}\r\n          onChange={this.handleChange}\r\n          autoFocus\r\n        />\r\n        <button type=\"submit\" className=\"add\">\r\n          Add\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nclass ToggleButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isToggleOn: true };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  handleClick = (e) => {\r\n    this.setState((state) => {\r\n      return { isToggleOn: state.isToggleOn ? false : true };\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.handleClick}>\r\n          {this.state.isToggleOn ? 'ON' : 'OFF'}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToggleButton;\r\n","import React, { Component } from 'react';\r\n\r\nexport default class TaskItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      task: this.props.taskItem.task,\r\n      isEditing: false,\r\n    };\r\n  }\r\n  setEditingState = (isEditing) => {\r\n    this.setState({ isEditing: isEditing });\r\n  };\r\n  toggleTask = () => {\r\n    this.props.toggleTask(this.props.id);\r\n  };\r\n  deleteTask = () => {\r\n    this.props.deleteTask(this.props.id);\r\n  };\r\n  handleChange = (event) => {\r\n    this.setState({ task: event.target.value });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.editTask(this.props.id, this.state.task);\r\n    this.setState({ isEditing: false });\r\n  };\r\n  render() {\r\n    return (\r\n      <tr>\r\n        {this.state.isEditing ? (\r\n          <>\r\n            <td>\r\n              <form onSubmit={this.handleSubmit}>\r\n                <input\r\n                  value={this.state.task}\r\n                  onChange={this.handleChange}\r\n                  autoFocus\r\n                />\r\n              </form>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"save\"\r\n                onClick={this.handleSubmit}\r\n                type=\"submit\"\r\n              >\r\n                Save\r\n              </button>\r\n              <button\r\n                className=\"back\"\r\n                onClick={() => this.setEditingState(false)}\r\n                type=\"button\"\r\n              >\r\n                Back\r\n              </button>\r\n            </td>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <td className=\"task\" onClick={this.toggleTask}>\r\n              <input\r\n                type=\"checkbox\"\r\n                readonly\r\n                checked={this.props.taskItem.isCompleted}\r\n              />\r\n              <span\r\n                className={\r\n                  this.props.taskItem.isCompleted\r\n                    ? 'completed'\r\n                    : 'not-completed'\r\n                }\r\n              >\r\n                {this.props.taskItem.task}\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"edit\"\r\n                onClick={() => this.setEditingState(true)}\r\n              >\r\n                Edit\r\n              </button>\r\n              <button className=\"delete\" onClick={this.deleteTask}>\r\n                Delete\r\n              </button>\r\n            </td>\r\n          </>\r\n        )}\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport TaskItem from './TaskItem';\r\n\r\nexport default class TaskList extends React.Component {\r\n  render() {\r\n    return (\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Task</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.props.tasks.map((task, index) => (\r\n            <TaskItem\r\n              key={index}\r\n              taskItem={task}\r\n              id={index}\r\n              deleteTask={this.props.deleteTask}\r\n              editTask={this.props.editTask}\r\n              toggleTask={this.props.toggleTask}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport CreateTask from './CreateTask';\r\nimport TaskList from './TaskList';\r\n\r\nconst tasks = localStorage.getItem('tasks')\r\n  ? JSON.parse(localStorage.getItem('tasks'))\r\n  : [];\r\nexport default class Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: tasks,\r\n    };\r\n  }\r\n  createTask = (task) => {\r\n    if (task.trim() === '') {\r\n      alert(\"Task can't be empty\");\r\n      return;\r\n    }\r\n    tasks.push({ task, isCompleted: false });\r\n    this.setState({ tasks: tasks });\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  };\r\n  toggleTask = (taskId) => {\r\n    const taskItem = tasks[taskId];\r\n    taskItem.isCompleted = !taskItem.isCompleted;\r\n    this.setState({ tasks: tasks });\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  };\r\n  deleteTask = (taskId) => {\r\n    tasks.splice(taskId, 1);\r\n    this.setState({ tasks: tasks });\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  };\r\n  editTask = (taskId, task) => {\r\n    const taskItem = tasks[taskId];\r\n    taskItem.task = task;\r\n    this.setState({ tasks: tasks });\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <h1>Todos</h1>\r\n        <div className=\"content\">\r\n          <CreateTask createTask={this.createTask} />\r\n          <br />\r\n          <TaskList\r\n            tasks={this.state.tasks}\r\n            deleteTask={this.deleteTask}\r\n            editTask={this.editTask}\r\n            toggleTask={this.toggleTask}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Welcome from './Welcome';\nimport Message from './Message';\nimport Clock from './Clock';\nimport ToggleButton from './ToggleButton';\nimport Main from './Components/Main';\n\nfunction App() {\n  return (\n    <div>\n      {/* <Welcome name=\"Apj\" />\n      <Message message=\"Happy Learning React JS\" />\n      <Clock date={new Date()} />\n      <ToggleButton /> */}\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Welcome from './Welcome';\nimport Message from './Message';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}